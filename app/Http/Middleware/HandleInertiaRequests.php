<?php

namespace App\Http\Middleware;

use Illuminate\Http\Request;
use Inertia\Middleware;

/**
 * ğŸ”„ HandleInertiaRequests
 *
 * Middleware pour la gestion des requÃªtes Inertia.js
 * Assure la cohÃ©rence entre le backend Laravel et le frontend Vue.js
 * GÃ¨re le partage des donnÃ©es et la version des assets
 */
class HandleInertiaRequests extends Middleware
{
    /**
     * ğŸ“„ Template racine chargÃ© lors de la premiÃ¨re visite
     *
     * DÃ©finit le template de base pour toutes les pages Inertia
     * UtilisÃ© comme point d'entrÃ©e pour l'application
     *
     * @see https://inertiajs.com/server-side-setup#root-template
     * @var string
     */
    protected $rootView = 'app';

    /**
     * ğŸ”¢ DÃ©termine la version actuelle des assets
     *
     * UtilisÃ© pour l'invalidation du cache des assets
     * Permet de forcer le rechargement des ressources lors des mises Ã  jour
     *
     * @see https://inertiajs.com/asset-versioning
     * @param Request $request La requÃªte HTTP
     * @return string|null
     */
    public function version(Request $request): ?string
    {
        return parent::version($request);
    }

    /**
     * ğŸ“¦ DÃ©finit les props partagÃ©es par dÃ©faut
     *
     * DonnÃ©es disponibles dans toutes les pages de l'application
     * Peut inclure des informations globales comme l'utilisateur connectÃ©
     *
     * @see https://inertiajs.com/shared-data
     * @param Request $request La requÃªte HTTP
     * @return array<string, mixed>
     */
    public function share(Request $request): array
    {
        return array_merge(parent::share($request), [
            //
        ]);
    }
}
